---
import { useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import Layout from "../layouts/Layout.astro";

const sbApi = useStoryblokApi();

export async function getStaticPaths() {
    //You can also have this in an utils file so it can be reused.
    let languages = ["de", "fr"];
    const storyblokApi = useStoryblokApi();
    const { data } = await storyblokApi.get("cdn/links", {
        version: "draft",
    });
    let links = data.links;
    links = Object.values(links);
    let paths: Array<{
    props: {
        language: string;
        slug: string | undefined;
        langSwitch: Array<{ lang: string; slug: string }>;
    };
    params: { slug: string };
}> = [];

links.forEach((link: { slug: string }) => {
    languages.forEach((language) => {
        let slug = link.slug === 'home' ? undefined : link.slug;
        let full_url = language === 'de' ? slug || "" : `${language}/${slug ?? ''}`;
        let langSwitch = languages.map((lang) => ({
            lang,
            slug: lang === 'de' ? `/${slug ?? ''}` : `/${lang}/${slug ?? ''}`,
        }));

        paths.push({
            props: { language, slug, langSwitch },
            params: {
                slug: full_url,
            },
        });
    });
});

return paths;
}

console.log("slug", Astro.props.slug);
console.log("language", Astro.props.language);
console.log("langSwitch", Astro.props.langSwitch);
const { slug, language, langSwitch } = Astro.props;
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get(
    `cdn/stories/${slug === undefined ? "home" : slug}`,
    {
        version: import.meta.env.DEV ? "draft" : "published",
        resolve_relations: ["popular-articles.articles"],
        language,
    },
);
const story = data.story;
---

<Layout title={story.name} langSwitch={langSwitch} language={language}>
    <StoryblokComponent language={language} blok={story.content} />
</Layout>
